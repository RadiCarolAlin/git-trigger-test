# Single, modular Cloud Build with live step progress callbacks to _PROGRESS_URL
timeout: 60m
options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: ALLOW_LOOSE

substitutions:
  _TARGETS: "frontend,backend"
  _PROGRESS_URL: "https://maurita-unfaceted-prospectively.ngrok-free.dev"



steps:

# 0) context
- id: context
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      echo "PROJECT_ID : ${PROJECT_ID}"
      echo "_TARGETS    : ${_TARGETS}"
      echo "_PROGRESS_URL: ${_PROGRESS_URL:-<empty>}"
      echo "BRANCH      : ${BRANCH_NAME:-n/a}"
      echo "SHORT_SHA   : ${SHORT_SHA:-n/a}"

########################
# 1) FRONTEND
########################
- id: notify-frontend-start
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",frontend,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=frontend&status=START" || true
      fi
  waitFor: ['-']

- id: frontend
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      if [[ ",${_TARGETS}," == *",frontend,"* ]]; then
        echo "=== FRONTEND selected ==="
        echo "[frontend] building..."
        sleep 2
        echo "[frontend] deploying..."
        sleep 2
        echo "[frontend] done."
      else
        echo "skip frontend"
      fi

- id: notify-frontend-done
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",frontend,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=frontend&status=DONE" || true
      fi
  waitFor: ['frontend']

########################
# 2) BACKEND
########################
- id: notify-backend-start
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",backend,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=backend&status=START" || true
      fi
  waitFor: ['frontend']

- id: backend
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      if [[ ",${_TARGETS}," == *",backend,"* ]]; then
        echo "=== BACKEND selected ==="
        echo "[backend] building..."
        sleep 2
        echo "[backend] deploying..."
        sleep 2
        echo "[backend] done."
      else
        echo "skip backend"
      fi

- id: notify-backend-done
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",backend,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=backend&status=DONE" || true
      fi
  waitFor: ['backend']

########################
# 3) GITEA
########################
- id: notify-gitea-start
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",gitea,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=gitea&status=START" || true
      fi
  waitFor: ['backend']

- id: gitea
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      if [[ ",${_TARGETS}," == *",gitea,"* ]]; then
        echo "=== GITEA selected ==="
        echo "[gitea] setup..."
        sleep 2
        echo "[gitea] done."
      else
        echo "skip gitea"
      fi

- id: notify-gitea-done
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",gitea,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=gitea&status=DONE" || true
      fi
  waitFor: ['gitea']

########################
# 4) CONFLUENCE
########################
- id: notify-confluence-start
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",confluence,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=confluence&status=START" || true
      fi
  waitFor: ['gitea']

- id: confluence
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      if [[ ",${_TARGETS}," == *",confluence,"* ]]; then
        echo "=== CONFLUENCE selected ==="
        echo "[confluence] setup..."
        sleep 2
        echo "[confluence] done."
      else
        echo "skip confluence"
      fi

- id: notify-confluence-done
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",confluence,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=confluence&status=DONE" || true
      fi
  waitFor: ['confluence']

########################
# 5) JIRA
########################
- id: notify-jira-start
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",jira,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=jira&status=START" || true
      fi
  waitFor: ['confluence']

- id: jira
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      if [[ ",${_TARGETS}," == *",jira,"* ]]; then
        echo "=== JIRA selected ==="
        echo "[jira] setup..."
        sleep 2
        echo "[jira] done."
      else
        echo "skip jira"
      fi

- id: notify-jira-done
  name: curlimages/curl
  entrypoint: sh
  args:
    - -c
    - |
      if [ -n "${_PROGRESS_URL}" ] && echo ",${_TARGETS}," | grep -q ",jira,"; then
        curl -sS -m 2 -X POST "${_PROGRESS_URL}/progress?op=${BUILD_ID}&step=jira&status=DONE" || true
      fi
  waitFor: ['jira']
